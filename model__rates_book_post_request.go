/*
Lite API

The **Lite API** can be used to to do the following  Get room rates & availability for a set of hotels Select a specific hotel with room availability and make a booking Manage the bookings - retrieve and cancel existing bookings Get static content for hotels, search hotels by destination

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RatesBookPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RatesBookPostRequest{}

// RatesBookPostRequest struct for RatesBookPostRequest
type RatesBookPostRequest struct {
	// prebook id retrived from prebook response
	PrebookId string `json:"prebookId"`
	GuestInfo RatesBookPostRequestGuestInfo `json:"guestInfo"`
	Payment *RatesBookPostRequestPayment `json:"payment,omitempty"`
}

// NewRatesBookPostRequest instantiates a new RatesBookPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRatesBookPostRequest(prebookId string, guestInfo RatesBookPostRequestGuestInfo) *RatesBookPostRequest {
	this := RatesBookPostRequest{}
	this.PrebookId = prebookId
	this.GuestInfo = guestInfo
	return &this
}

// NewRatesBookPostRequestWithDefaults instantiates a new RatesBookPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRatesBookPostRequestWithDefaults() *RatesBookPostRequest {
	this := RatesBookPostRequest{}
	return &this
}

// GetPrebookId returns the PrebookId field value
func (o *RatesBookPostRequest) GetPrebookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrebookId
}

// GetPrebookIdOk returns a tuple with the PrebookId field value
// and a boolean to check if the value has been set.
func (o *RatesBookPostRequest) GetPrebookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrebookId, true
}

// SetPrebookId sets field value
func (o *RatesBookPostRequest) SetPrebookId(v string) {
	o.PrebookId = v
}

// GetGuestInfo returns the GuestInfo field value
func (o *RatesBookPostRequest) GetGuestInfo() RatesBookPostRequestGuestInfo {
	if o == nil {
		var ret RatesBookPostRequestGuestInfo
		return ret
	}

	return o.GuestInfo
}

// GetGuestInfoOk returns a tuple with the GuestInfo field value
// and a boolean to check if the value has been set.
func (o *RatesBookPostRequest) GetGuestInfoOk() (*RatesBookPostRequestGuestInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GuestInfo, true
}

// SetGuestInfo sets field value
func (o *RatesBookPostRequest) SetGuestInfo(v RatesBookPostRequestGuestInfo) {
	o.GuestInfo = v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *RatesBookPostRequest) GetPayment() RatesBookPostRequestPayment {
	if o == nil || IsNil(o.Payment) {
		var ret RatesBookPostRequestPayment
		return ret
	}
	return *o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RatesBookPostRequest) GetPaymentOk() (*RatesBookPostRequestPayment, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *RatesBookPostRequest) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given RatesBookPostRequestPayment and assigns it to the Payment field.
func (o *RatesBookPostRequest) SetPayment(v RatesBookPostRequestPayment) {
	o.Payment = &v
}

func (o RatesBookPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RatesBookPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["prebookId"] = o.PrebookId
	toSerialize["guestInfo"] = o.GuestInfo
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	return toSerialize, nil
}

type NullableRatesBookPostRequest struct {
	value *RatesBookPostRequest
	isSet bool
}

func (v NullableRatesBookPostRequest) Get() *RatesBookPostRequest {
	return v.value
}

func (v *NullableRatesBookPostRequest) Set(val *RatesBookPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRatesBookPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRatesBookPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRatesBookPostRequest(val *RatesBookPostRequest) *NullableRatesBookPostRequest {
	return &NullableRatesBookPostRequest{value: val, isSet: true}
}

func (v NullableRatesBookPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRatesBookPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


